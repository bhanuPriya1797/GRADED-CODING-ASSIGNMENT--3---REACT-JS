{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport warning from \"rc-util/es/warning\";\nimport { toArray } from './commonUtil';\nfunction getKey(data, index) {\n  var key = data.key;\n  var value;\n  if ('value' in data) {\n    value = data.value;\n  }\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  if (value !== undefined) {\n    return value;\n  }\n  return \"rc-index-key-\".concat(index);\n}\nexport function fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n    label = _ref.label,\n    value = _ref.value,\n    options = _ref.options;\n  return {\n    label: label || 'label',\n    value: value || 'value',\n    options: options || 'options'\n  };\n}\n/**\n * Flat options into flatten list.\n * We use `optionOnly` here is aim to avoid user use nested option group.\n * Here is simply set `key` to the index if not provided.\n */\n\nexport function flattenOptions(options) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    fieldNames = _ref2.fieldNames;\n  var flattenList = [];\n  var _fillFieldNames = fillFieldNames(fieldNames),\n    fieldLabel = _fillFieldNames.label,\n    fieldValue = _fillFieldNames.value,\n    fieldOptions = _fillFieldNames.options;\n  function dig(list, isGroupOption) {\n    list.forEach(function (data) {\n      var label = data[fieldLabel];\n      if (isGroupOption || !(fieldOptions in data)) {\n        // Option\n        flattenList.push({\n          key: getKey(data, flattenList.length),\n          groupOption: isGroupOption,\n          data: data,\n          label: label,\n          value: data[fieldValue]\n        });\n      } else {\n        // Option Group\n        flattenList.push({\n          key: getKey(data, flattenList.length),\n          group: true,\n          data: data,\n          label: label\n        });\n        dig(data[fieldOptions], true);\n      }\n    });\n  }\n  dig(options, false);\n  return flattenList;\n}\n/**\n * Inject `props` into `option` for legacy usage\n */\n\nfunction injectPropsWithOption(option) {\n  var newOption = _objectSpread({}, option);\n  if (!('props' in newOption)) {\n    Object.defineProperty(newOption, 'props', {\n      get: function get() {\n        warning(false, 'Return type is option instead of Option instance. Please read value directly instead of reading from `props`.');\n        return newOption;\n      }\n    });\n  }\n  return newOption;\n}\nexport function findValueOption(values, options) {\n  var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    _ref3$prevValueOption = _ref3.prevValueOptions,\n    prevValueOptions = _ref3$prevValueOption === void 0 ? [] : _ref3$prevValueOption;\n  var optionMap = new Map();\n  options.forEach(function (_ref4) {\n    var data = _ref4.data,\n      group = _ref4.group,\n      value = _ref4.value;\n    if (!group) {\n      // Check if match\n      optionMap.set(value, data);\n    }\n  });\n  return values.map(function (val) {\n    var option = optionMap.get(val); // Fallback to try to find prev options\n\n    if (!option) {\n      option = _objectSpread({}, prevValueOptions.find(function (opt) {\n        return opt._INTERNAL_OPTION_VALUE_ === val;\n      }));\n    }\n    return injectPropsWithOption(option);\n  });\n}\nexport var getLabeledValue = function getLabeledValue(value, _ref5) {\n  var options = _ref5.options,\n    prevValueMap = _ref5.prevValueMap,\n    labelInValue = _ref5.labelInValue,\n    optionLabelProp = _ref5.optionLabelProp;\n  var item = findValueOption([value], options)[0];\n  var result = {\n    value: value\n  };\n  var prevValItem = labelInValue ? prevValueMap.get(value) : undefined;\n  if (prevValItem && _typeof(prevValItem) === 'object' && 'label' in prevValItem) {\n    result.label = prevValItem.label;\n    if (item && typeof prevValItem.label === 'string' && typeof item[optionLabelProp] === 'string' && prevValItem.label.trim() !== item[optionLabelProp].trim()) {\n      warning(false, '`label` of `value` is not same as `label` in Select options.');\n    }\n  } else if (item && optionLabelProp in item) {\n    result.label = item[optionLabelProp];\n  } else {\n    result.label = value;\n    result.isCacheable = true;\n  } // Used for motion control\n\n  result.key = result.value;\n  return result;\n};\nfunction toRawString(content) {\n  return toArray(content).join('');\n}\n/** Filter single option if match the search text */\n\nfunction getFilterFunction(optionFilterProp) {\n  return function (searchValue, option) {\n    var lowerSearchText = searchValue.toLowerCase(); // Group label search\n\n    if ('options' in option) {\n      return toRawString(option.label).toLowerCase().includes(lowerSearchText);\n    } // Option value search\n\n    var rawValue = option[optionFilterProp];\n    var value = toRawString(rawValue).toLowerCase();\n    return value.includes(lowerSearchText);\n  };\n}\n/** Filter options and return a new options by the search text */\n\nexport function filterOptions(searchValue, options, _ref6) {\n  var optionFilterProp = _ref6.optionFilterProp,\n    filterOption = _ref6.filterOption;\n  var filteredOptions = [];\n  var filterFunc;\n  if (filterOption === false) {\n    return _toConsumableArray(options);\n  }\n  if (typeof filterOption === 'function') {\n    filterFunc = filterOption;\n  } else {\n    filterFunc = getFilterFunction(optionFilterProp);\n  }\n  options.forEach(function (item) {\n    // Group should check child options\n    if ('options' in item) {\n      // Check group first\n      var matchGroup = filterFunc(searchValue, item);\n      if (matchGroup) {\n        filteredOptions.push(item);\n      } else {\n        // Check option\n        var subOptions = item.options.filter(function (subItem) {\n          return filterFunc(searchValue, subItem);\n        });\n        if (subOptions.length) {\n          filteredOptions.push(_objectSpread(_objectSpread({}, item), {}, {\n            options: subOptions\n          }));\n        }\n      }\n      return;\n    }\n    if (filterFunc(searchValue, injectPropsWithOption(item))) {\n      filteredOptions.push(item);\n    }\n  });\n  return filteredOptions;\n}\nexport function getSeparatedContent(text, tokens) {\n  if (!tokens || !tokens.length) {\n    return null;\n  }\n  var match = false;\n  function separate(str, _ref7) {\n    var _ref8 = _toArray(_ref7),\n      token = _ref8[0],\n      restTokens = _ref8.slice(1);\n    if (!token) {\n      return [str];\n    }\n    var list = str.split(token);\n    match = match || list.length > 1;\n    return list.reduce(function (prevList, unitStr) {\n      return [].concat(_toConsumableArray(prevList), _toConsumableArray(separate(unitStr, restTokens)));\n    }, []).filter(function (unit) {\n      return unit;\n    });\n  }\n  var list = separate(text, tokens);\n  return match ? list : null;\n}\nexport function isValueDisabled(value, options) {\n  var option = findValueOption([value], options)[0];\n  return option.disabled;\n}\n/**\n * `tags` mode should fill un-list item into the option list\n */\n\nexport function fillOptionsWithMissingValue(options, value, optionLabelProp, labelInValue) {\n  var values = toArray(value).slice().sort();\n  var cloneOptions = _toConsumableArray(options); // Convert options value to set\n\n  var optionValues = new Set();\n  options.forEach(function (opt) {\n    if (opt.options) {\n      opt.options.forEach(function (subOpt) {\n        optionValues.add(subOpt.value);\n      });\n    } else {\n      optionValues.add(opt.value);\n    }\n  }); // Fill missing value\n\n  values.forEach(function (item) {\n    var val = labelInValue ? item.value : item;\n    if (!optionValues.has(val)) {\n      var _ref9;\n      cloneOptions.push(labelInValue ? (_ref9 = {}, _defineProperty(_ref9, optionLabelProp, item.label), _defineProperty(_ref9, \"value\", val), _ref9) : {\n        value: val\n      });\n    }\n  });\n  return cloneOptions;\n}","map":{"version":3,"names":["_defineProperty","_toArray","_toConsumableArray","_typeof","_objectSpread","warning","toArray","getKey","data","index","key","value","undefined","concat","fillFieldNames","fieldNames","_ref","label","options","flattenOptions","_ref2","arguments","length","flattenList","_fillFieldNames","fieldLabel","fieldValue","fieldOptions","dig","list","isGroupOption","forEach","push","groupOption","group","injectPropsWithOption","option","newOption","Object","defineProperty","get","findValueOption","values","_ref3","_ref3$prevValueOption","prevValueOptions","optionMap","Map","_ref4","set","map","val","find","opt","_INTERNAL_OPTION_VALUE_","getLabeledValue","_ref5","prevValueMap","labelInValue","optionLabelProp","item","result","prevValItem","trim","isCacheable","toRawString","content","join","getFilterFunction","optionFilterProp","searchValue","lowerSearchText","toLowerCase","includes","rawValue","filterOptions","_ref6","filterOption","filteredOptions","filterFunc","matchGroup","subOptions","filter","subItem","getSeparatedContent","text","tokens","match","separate","str","_ref7","_ref8","token","restTokens","slice","split","reduce","prevList","unitStr","unit","isValueDisabled","disabled","fillOptionsWithMissingValue","sort","cloneOptions","optionValues","Set","subOpt","add","has","_ref9"],"sources":["F:/Great Learning FSD/React Js/graded-final/repo/node_modules/rc-select/es/utils/valueUtil.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport warning from \"rc-util/es/warning\";\nimport { toArray } from './commonUtil';\n\nfunction getKey(data, index) {\n  var key = data.key;\n  var value;\n\n  if ('value' in data) {\n    value = data.value;\n  }\n\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  return \"rc-index-key-\".concat(index);\n}\n\nexport function fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n      label = _ref.label,\n      value = _ref.value,\n      options = _ref.options;\n\n  return {\n    label: label || 'label',\n    value: value || 'value',\n    options: options || 'options'\n  };\n}\n/**\n * Flat options into flatten list.\n * We use `optionOnly` here is aim to avoid user use nested option group.\n * Here is simply set `key` to the index if not provided.\n */\n\nexport function flattenOptions(options) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      fieldNames = _ref2.fieldNames;\n\n  var flattenList = [];\n\n  var _fillFieldNames = fillFieldNames(fieldNames),\n      fieldLabel = _fillFieldNames.label,\n      fieldValue = _fillFieldNames.value,\n      fieldOptions = _fillFieldNames.options;\n\n  function dig(list, isGroupOption) {\n    list.forEach(function (data) {\n      var label = data[fieldLabel];\n\n      if (isGroupOption || !(fieldOptions in data)) {\n        // Option\n        flattenList.push({\n          key: getKey(data, flattenList.length),\n          groupOption: isGroupOption,\n          data: data,\n          label: label,\n          value: data[fieldValue]\n        });\n      } else {\n        // Option Group\n        flattenList.push({\n          key: getKey(data, flattenList.length),\n          group: true,\n          data: data,\n          label: label\n        });\n        dig(data[fieldOptions], true);\n      }\n    });\n  }\n\n  dig(options, false);\n  return flattenList;\n}\n/**\n * Inject `props` into `option` for legacy usage\n */\n\nfunction injectPropsWithOption(option) {\n  var newOption = _objectSpread({}, option);\n\n  if (!('props' in newOption)) {\n    Object.defineProperty(newOption, 'props', {\n      get: function get() {\n        warning(false, 'Return type is option instead of Option instance. Please read value directly instead of reading from `props`.');\n        return newOption;\n      }\n    });\n  }\n\n  return newOption;\n}\n\nexport function findValueOption(values, options) {\n  var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref3$prevValueOption = _ref3.prevValueOptions,\n      prevValueOptions = _ref3$prevValueOption === void 0 ? [] : _ref3$prevValueOption;\n\n  var optionMap = new Map();\n  options.forEach(function (_ref4) {\n    var data = _ref4.data,\n        group = _ref4.group,\n        value = _ref4.value;\n\n    if (!group) {\n      // Check if match\n      optionMap.set(value, data);\n    }\n  });\n  return values.map(function (val) {\n    var option = optionMap.get(val); // Fallback to try to find prev options\n\n    if (!option) {\n      option = _objectSpread({}, prevValueOptions.find(function (opt) {\n        return opt._INTERNAL_OPTION_VALUE_ === val;\n      }));\n    }\n\n    return injectPropsWithOption(option);\n  });\n}\nexport var getLabeledValue = function getLabeledValue(value, _ref5) {\n  var options = _ref5.options,\n      prevValueMap = _ref5.prevValueMap,\n      labelInValue = _ref5.labelInValue,\n      optionLabelProp = _ref5.optionLabelProp;\n  var item = findValueOption([value], options)[0];\n  var result = {\n    value: value\n  };\n  var prevValItem = labelInValue ? prevValueMap.get(value) : undefined;\n\n  if (prevValItem && _typeof(prevValItem) === 'object' && 'label' in prevValItem) {\n    result.label = prevValItem.label;\n\n    if (item && typeof prevValItem.label === 'string' && typeof item[optionLabelProp] === 'string' && prevValItem.label.trim() !== item[optionLabelProp].trim()) {\n      warning(false, '`label` of `value` is not same as `label` in Select options.');\n    }\n  } else if (item && optionLabelProp in item) {\n    result.label = item[optionLabelProp];\n  } else {\n    result.label = value;\n    result.isCacheable = true;\n  } // Used for motion control\n\n\n  result.key = result.value;\n  return result;\n};\n\nfunction toRawString(content) {\n  return toArray(content).join('');\n}\n/** Filter single option if match the search text */\n\n\nfunction getFilterFunction(optionFilterProp) {\n  return function (searchValue, option) {\n    var lowerSearchText = searchValue.toLowerCase(); // Group label search\n\n    if ('options' in option) {\n      return toRawString(option.label).toLowerCase().includes(lowerSearchText);\n    } // Option value search\n\n\n    var rawValue = option[optionFilterProp];\n    var value = toRawString(rawValue).toLowerCase();\n    return value.includes(lowerSearchText);\n  };\n}\n/** Filter options and return a new options by the search text */\n\n\nexport function filterOptions(searchValue, options, _ref6) {\n  var optionFilterProp = _ref6.optionFilterProp,\n      filterOption = _ref6.filterOption;\n  var filteredOptions = [];\n  var filterFunc;\n\n  if (filterOption === false) {\n    return _toConsumableArray(options);\n  }\n\n  if (typeof filterOption === 'function') {\n    filterFunc = filterOption;\n  } else {\n    filterFunc = getFilterFunction(optionFilterProp);\n  }\n\n  options.forEach(function (item) {\n    // Group should check child options\n    if ('options' in item) {\n      // Check group first\n      var matchGroup = filterFunc(searchValue, item);\n\n      if (matchGroup) {\n        filteredOptions.push(item);\n      } else {\n        // Check option\n        var subOptions = item.options.filter(function (subItem) {\n          return filterFunc(searchValue, subItem);\n        });\n\n        if (subOptions.length) {\n          filteredOptions.push(_objectSpread(_objectSpread({}, item), {}, {\n            options: subOptions\n          }));\n        }\n      }\n\n      return;\n    }\n\n    if (filterFunc(searchValue, injectPropsWithOption(item))) {\n      filteredOptions.push(item);\n    }\n  });\n  return filteredOptions;\n}\nexport function getSeparatedContent(text, tokens) {\n  if (!tokens || !tokens.length) {\n    return null;\n  }\n\n  var match = false;\n\n  function separate(str, _ref7) {\n    var _ref8 = _toArray(_ref7),\n        token = _ref8[0],\n        restTokens = _ref8.slice(1);\n\n    if (!token) {\n      return [str];\n    }\n\n    var list = str.split(token);\n    match = match || list.length > 1;\n    return list.reduce(function (prevList, unitStr) {\n      return [].concat(_toConsumableArray(prevList), _toConsumableArray(separate(unitStr, restTokens)));\n    }, []).filter(function (unit) {\n      return unit;\n    });\n  }\n\n  var list = separate(text, tokens);\n  return match ? list : null;\n}\nexport function isValueDisabled(value, options) {\n  var option = findValueOption([value], options)[0];\n  return option.disabled;\n}\n/**\n * `tags` mode should fill un-list item into the option list\n */\n\nexport function fillOptionsWithMissingValue(options, value, optionLabelProp, labelInValue) {\n  var values = toArray(value).slice().sort();\n\n  var cloneOptions = _toConsumableArray(options); // Convert options value to set\n\n\n  var optionValues = new Set();\n  options.forEach(function (opt) {\n    if (opt.options) {\n      opt.options.forEach(function (subOpt) {\n        optionValues.add(subOpt.value);\n      });\n    } else {\n      optionValues.add(opt.value);\n    }\n  }); // Fill missing value\n\n  values.forEach(function (item) {\n    var val = labelInValue ? item.value : item;\n\n    if (!optionValues.has(val)) {\n      var _ref9;\n\n      cloneOptions.push(labelInValue ? (_ref9 = {}, _defineProperty(_ref9, optionLabelProp, item.label), _defineProperty(_ref9, \"value\", val), _ref9) : {\n        value: val\n      });\n    }\n  });\n  return cloneOptions;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}