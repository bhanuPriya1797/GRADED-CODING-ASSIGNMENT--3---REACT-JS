{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"checkable\", \"changeOnSelect\", \"children\", \"options\", \"onChange\", \"value\", \"defaultValue\", \"popupVisible\", \"open\", \"dropdownClassName\", \"popupClassName\", \"onDropdownVisibleChange\", \"onPopupVisibleChange\", \"popupPlacement\", \"placement\", \"searchValue\", \"onSearch\", \"showSearch\", \"expandTrigger\", \"expandIcon\", \"loadingIcon\", \"displayRender\", \"loadData\", \"dropdownMenuColumnStyle\", \"dropdownPrefixCls\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport generate from \"rc-tree-select/es/generate\";\nimport OptionList from './OptionList';\nimport CascaderContext from './context';\nimport { connectValue, convertOptions, fillFieldNames, restoreCompatibleValue, splitValue } from './util';\nimport useUpdateEffect from './hooks/useUpdateEffect';\nimport useSearchConfig from './hooks/useSearchConfig';\nvar INTERNAL_VALUE_FIELD = '__rc_cascader_value__';\n/**\n * `rc-cascader` is much like `rc-tree-select` but API is very different.\n * It's caused that component developer is not same person\n * and we do not rice the API naming standard at that time.\n *\n * To avoid breaking change, wrap the `rc-tree-select` to compatible with `rc-cascader` API.\n * This should be better to merge to same API like `rc-tree-select` or `rc-select` in next major version.\n *\n * Update:\n * - dropdown class change to `rc-cascader-dropdown`\n * - direction rtl keyboard\n *\n * Deprecated:\n * - popupVisible\n * - hidePopupOnSelect\n *\n * Removed:\n * - builtinPlacements: Handle by select\n */\n\nvar RefCascader = generate({\n  prefixCls: 'rc-cascader',\n  optionList: OptionList\n});\nfunction defaultDisplayRender(labels) {\n  return labels.join(' / ');\n}\nvar Cascader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var checkable = props.checkable,\n    changeOnSelect = props.changeOnSelect,\n    children = props.children,\n    options = props.options,\n    onChange = props.onChange,\n    value = props.value,\n    defaultValue = props.defaultValue,\n    popupVisible = props.popupVisible,\n    open = props.open,\n    dropdownClassName = props.dropdownClassName,\n    popupClassName = props.popupClassName,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    onPopupVisibleChange = props.onPopupVisibleChange,\n    popupPlacement = props.popupPlacement,\n    placement = props.placement,\n    searchValue = props.searchValue,\n    onSearch = props.onSearch,\n    showSearch = props.showSearch,\n    expandTrigger = props.expandTrigger,\n    _props$expandIcon = props.expandIcon,\n    expandIcon = _props$expandIcon === void 0 ? '>' : _props$expandIcon,\n    loadingIcon = props.loadingIcon,\n    _props$displayRender = props.displayRender,\n    displayRender = _props$displayRender === void 0 ? defaultDisplayRender : _props$displayRender,\n    loadData = props.loadData,\n    dropdownMenuColumnStyle = props.dropdownMenuColumnStyle,\n    dropdownPrefixCls = props.dropdownPrefixCls,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var fieldNames = restProps.fieldNames; // ============================ Ref =============================\n\n  var cascaderRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        cascaderRef.current.focus();\n      },\n      blur: function blur() {\n        cascaderRef.current.blur();\n      }\n    };\n  });\n  var getEntityByValue = function getEntityByValue(val) {\n    return cascaderRef.current.getEntityByValue(val);\n  }; // =========================== Search ===========================\n\n  var _useMergedState = useMergedState(undefined, {\n      value: searchValue,\n      onChange: onSearch\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSearch = _useMergedState2[0],\n    setMergedSearch = _useMergedState2[1];\n  var _useSearchConfig = useSearchConfig(showSearch),\n    _useSearchConfig2 = _slicedToArray(_useSearchConfig, 2),\n    mergedShowSearch = _useSearchConfig2[0],\n    searchConfig = _useSearchConfig2[1]; // ========================== Options ===========================\n\n  var outerFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, [fieldNames]);\n  var mergedFieldNames = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, outerFieldNames), {}, {\n      value: INTERNAL_VALUE_FIELD\n    });\n  }, [outerFieldNames]);\n  var mergedOptions = React.useMemo(function () {\n    return convertOptions(options, outerFieldNames, INTERNAL_VALUE_FIELD);\n  }, [options, outerFieldNames]); // =========================== Value ============================\n\n  /**\n   * Always pass props value to last value unit:\n   * - single: ['light', 'little'] => ['light__little']\n   * - multiple: [['light', 'little'], ['bamboo']] => ['light__little', 'bamboo']\n   */\n\n  var parseToInternalValue = function parseToInternalValue(propValue) {\n    var propValueList = [];\n    if (propValue) {\n      propValueList = checkable ? propValue : [propValue];\n    }\n    return propValueList.map(connectValue);\n  };\n  var _React$useState = React.useState(function () {\n      return parseToInternalValue(value || defaultValue);\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    internalValue = _React$useState2[0],\n    setInternalValue = _React$useState2[1];\n  useUpdateEffect(function () {\n    setInternalValue(parseToInternalValue(value));\n  }, [value]); // =========================== Label ============================\n\n  var labelRender = function labelRender(entity, val) {\n    var fieldLabel = mergedFieldNames.label;\n    if (!entity) {\n      var valPath = splitValue(val);\n      return displayRender(valPath, []);\n    }\n    if (checkable) {\n      return entity.data.node[fieldLabel];\n    }\n    var _restoreCompatibleVal = restoreCompatibleValue(entity, mergedFieldNames),\n      selectedOptions = _restoreCompatibleVal.options;\n    var rawOptions = selectedOptions.map(function (opt) {\n      return opt.node;\n    });\n    var labelList = rawOptions.map(function (opt) {\n      return opt[fieldLabel];\n    });\n    return displayRender(labelList, rawOptions);\n  }; // =========================== Change ===========================\n\n  var onInternalChange = function onInternalChange(newValue\n  /** Not care current type */) {\n    // TODO: Need improve motion experience\n    setMergedSearch('');\n    var valueList = checkable ? newValue : [newValue];\n    var pathList = [];\n    var optionsList = [];\n    var valueEntities = valueList.map(getEntityByValue).filter(function (entity) {\n      return entity;\n    });\n    valueEntities.forEach(function (entity) {\n      var _restoreCompatibleVal2 = restoreCompatibleValue(entity, mergedFieldNames),\n        valueOptions = _restoreCompatibleVal2.options;\n      var originOptions = valueOptions.map(function (option) {\n        return option.node;\n      });\n      pathList.push(originOptions.map(function (opt) {\n        return (\n          // Here we should use original FieldNames value mapping\n          opt[outerFieldNames.value]\n        );\n      }));\n      optionsList.push(originOptions);\n    }); // Fill state\n\n    if (value === undefined) {\n      setInternalValue(valueList);\n    }\n    if (onChange) {\n      if (checkable) {\n        onChange(pathList, optionsList);\n      } else {\n        // TODO: This should return null as other component.\n        // But its a breaking change and we should keep the logic.\n        onChange(pathList[0] || [], optionsList[0] || []);\n      }\n    }\n  }; // ============================ Open ============================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!onPopupVisibleChange, '`onPopupVisibleChange` is deprecated. Please use `onDropdownVisibleChange` instead.');\n    warning(popupVisible === undefined, '`popupVisible` is deprecated. Please use `open` instead.');\n    warning(popupClassName === undefined, '`popupClassName` is deprecated. Please use `dropdownClassName` instead.');\n    warning(popupPlacement === undefined, '`popupPlacement` is deprecated. Please use `placement` instead.');\n  }\n  var mergedOpen = open !== undefined ? open : popupVisible;\n  var mergedDropdownClassName = dropdownClassName || popupClassName;\n  var mergedPlacement = placement || popupPlacement;\n  var onInternalDropdownVisibleChange = function onInternalDropdownVisibleChange(nextVisible) {\n    onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextVisible);\n    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(nextVisible);\n  }; // ========================== Context ===========================\n\n  var context = React.useMemo(function () {\n    return {\n      changeOnSelect: changeOnSelect,\n      expandTrigger: expandTrigger,\n      fieldNames: mergedFieldNames,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      loadData: loadData,\n      dropdownMenuColumnStyle: dropdownMenuColumnStyle,\n      search: searchConfig,\n      dropdownPrefixCls: dropdownPrefixCls\n    };\n  }, [changeOnSelect, expandTrigger, mergedFieldNames, expandIcon, loadingIcon, loadData, dropdownMenuColumnStyle, searchConfig, dropdownPrefixCls]); // =========================== Render ===========================\n\n  var dropdownStyle =\n  // Search to match width\n  mergedSearch && searchConfig.matchInputWidth ||\n  // Empty keep the width\n  !mergedOptions.length ? {} : {\n    minWidth: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(RefCascader, _extends({\n    ref: cascaderRef\n  }, restProps, {\n    fieldNames: mergedFieldNames,\n    value: checkable ? internalValue : internalValue[0],\n    placement: mergedPlacement,\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: mergedDropdownClassName,\n    treeData: mergedOptions,\n    treeCheckable: checkable,\n    treeNodeFilterProp: \"label\",\n    onChange: onInternalChange,\n    showCheckedStrategy: RefCascader.SHOW_PARENT,\n    open: mergedOpen,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange,\n    searchValue: mergedSearch // Customize filter logic in OptionList\n    ,\n\n    filterTreeNode: function filterTreeNode() {\n      return true;\n    },\n    showSearch: mergedShowSearch,\n    onSearch: setMergedSearch,\n    labelRender: labelRender,\n    getRawInputElement: function getRawInputElement() {\n      return children;\n    }\n  })));\n});\nCascader.displayName = 'Cascader';\nexport default Cascader;","map":{"version":3,"names":["_extends","_objectSpread","_slicedToArray","_objectWithoutProperties","_excluded","React","warning","useMergedState","generate","OptionList","CascaderContext","connectValue","convertOptions","fillFieldNames","restoreCompatibleValue","splitValue","useUpdateEffect","useSearchConfig","INTERNAL_VALUE_FIELD","RefCascader","prefixCls","optionList","defaultDisplayRender","labels","join","Cascader","forwardRef","props","ref","checkable","changeOnSelect","children","options","onChange","value","defaultValue","popupVisible","open","dropdownClassName","popupClassName","onDropdownVisibleChange","onPopupVisibleChange","popupPlacement","placement","searchValue","onSearch","showSearch","expandTrigger","_props$expandIcon","expandIcon","loadingIcon","_props$displayRender","displayRender","loadData","dropdownMenuColumnStyle","dropdownPrefixCls","restProps","fieldNames","cascaderRef","useRef","useImperativeHandle","focus","current","blur","getEntityByValue","val","_useMergedState","undefined","_useMergedState2","mergedSearch","setMergedSearch","_useSearchConfig","_useSearchConfig2","mergedShowSearch","searchConfig","outerFieldNames","useMemo","mergedFieldNames","mergedOptions","parseToInternalValue","propValue","propValueList","map","_React$useState","useState","_React$useState2","internalValue","setInternalValue","labelRender","entity","fieldLabel","label","valPath","data","node","_restoreCompatibleVal","selectedOptions","rawOptions","opt","labelList","onInternalChange","newValue","valueList","pathList","optionsList","valueEntities","filter","forEach","_restoreCompatibleVal2","valueOptions","originOptions","option","push","process","env","NODE_ENV","mergedOpen","mergedDropdownClassName","mergedPlacement","onInternalDropdownVisibleChange","nextVisible","context","search","dropdownStyle","matchInputWidth","length","minWidth","createElement","Provider","dropdownMatchSelectWidth","treeData","treeCheckable","treeNodeFilterProp","showCheckedStrategy","SHOW_PARENT","filterTreeNode","getRawInputElement","displayName"],"sources":["F:/Great Learning FSD/React Js/graded-final/repo/node_modules/rc-cascader/es/Cascader.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"checkable\", \"changeOnSelect\", \"children\", \"options\", \"onChange\", \"value\", \"defaultValue\", \"popupVisible\", \"open\", \"dropdownClassName\", \"popupClassName\", \"onDropdownVisibleChange\", \"onPopupVisibleChange\", \"popupPlacement\", \"placement\", \"searchValue\", \"onSearch\", \"showSearch\", \"expandTrigger\", \"expandIcon\", \"loadingIcon\", \"displayRender\", \"loadData\", \"dropdownMenuColumnStyle\", \"dropdownPrefixCls\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport generate from \"rc-tree-select/es/generate\";\nimport OptionList from './OptionList';\nimport CascaderContext from './context';\nimport { connectValue, convertOptions, fillFieldNames, restoreCompatibleValue, splitValue } from './util';\nimport useUpdateEffect from './hooks/useUpdateEffect';\nimport useSearchConfig from './hooks/useSearchConfig';\nvar INTERNAL_VALUE_FIELD = '__rc_cascader_value__';\n/**\n * `rc-cascader` is much like `rc-tree-select` but API is very different.\n * It's caused that component developer is not same person\n * and we do not rice the API naming standard at that time.\n *\n * To avoid breaking change, wrap the `rc-tree-select` to compatible with `rc-cascader` API.\n * This should be better to merge to same API like `rc-tree-select` or `rc-select` in next major version.\n *\n * Update:\n * - dropdown class change to `rc-cascader-dropdown`\n * - direction rtl keyboard\n *\n * Deprecated:\n * - popupVisible\n * - hidePopupOnSelect\n *\n * Removed:\n * - builtinPlacements: Handle by select\n */\n\nvar RefCascader = generate({\n  prefixCls: 'rc-cascader',\n  optionList: OptionList\n});\n\nfunction defaultDisplayRender(labels) {\n  return labels.join(' / ');\n}\n\nvar Cascader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var checkable = props.checkable,\n      changeOnSelect = props.changeOnSelect,\n      children = props.children,\n      options = props.options,\n      onChange = props.onChange,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      popupVisible = props.popupVisible,\n      open = props.open,\n      dropdownClassName = props.dropdownClassName,\n      popupClassName = props.popupClassName,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onPopupVisibleChange = props.onPopupVisibleChange,\n      popupPlacement = props.popupPlacement,\n      placement = props.placement,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      showSearch = props.showSearch,\n      expandTrigger = props.expandTrigger,\n      _props$expandIcon = props.expandIcon,\n      expandIcon = _props$expandIcon === void 0 ? '>' : _props$expandIcon,\n      loadingIcon = props.loadingIcon,\n      _props$displayRender = props.displayRender,\n      displayRender = _props$displayRender === void 0 ? defaultDisplayRender : _props$displayRender,\n      loadData = props.loadData,\n      dropdownMenuColumnStyle = props.dropdownMenuColumnStyle,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var fieldNames = restProps.fieldNames; // ============================ Ref =============================\n\n  var cascaderRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        cascaderRef.current.focus();\n      },\n      blur: function blur() {\n        cascaderRef.current.blur();\n      }\n    };\n  });\n\n  var getEntityByValue = function getEntityByValue(val) {\n    return cascaderRef.current.getEntityByValue(val);\n  }; // =========================== Search ===========================\n\n\n  var _useMergedState = useMergedState(undefined, {\n    value: searchValue,\n    onChange: onSearch\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearch = _useMergedState2[0],\n      setMergedSearch = _useMergedState2[1];\n\n  var _useSearchConfig = useSearchConfig(showSearch),\n      _useSearchConfig2 = _slicedToArray(_useSearchConfig, 2),\n      mergedShowSearch = _useSearchConfig2[0],\n      searchConfig = _useSearchConfig2[1]; // ========================== Options ===========================\n\n\n  var outerFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, [fieldNames]);\n  var mergedFieldNames = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, outerFieldNames), {}, {\n      value: INTERNAL_VALUE_FIELD\n    });\n  }, [outerFieldNames]);\n  var mergedOptions = React.useMemo(function () {\n    return convertOptions(options, outerFieldNames, INTERNAL_VALUE_FIELD);\n  }, [options, outerFieldNames]); // =========================== Value ============================\n\n  /**\n   * Always pass props value to last value unit:\n   * - single: ['light', 'little'] => ['light__little']\n   * - multiple: [['light', 'little'], ['bamboo']] => ['light__little', 'bamboo']\n   */\n\n  var parseToInternalValue = function parseToInternalValue(propValue) {\n    var propValueList = [];\n\n    if (propValue) {\n      propValueList = checkable ? propValue : [propValue];\n    }\n\n    return propValueList.map(connectValue);\n  };\n\n  var _React$useState = React.useState(function () {\n    return parseToInternalValue(value || defaultValue);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      internalValue = _React$useState2[0],\n      setInternalValue = _React$useState2[1];\n\n  useUpdateEffect(function () {\n    setInternalValue(parseToInternalValue(value));\n  }, [value]); // =========================== Label ============================\n\n  var labelRender = function labelRender(entity, val) {\n    var fieldLabel = mergedFieldNames.label;\n\n    if (!entity) {\n      var valPath = splitValue(val);\n      return displayRender(valPath, []);\n    }\n\n    if (checkable) {\n      return entity.data.node[fieldLabel];\n    }\n\n    var _restoreCompatibleVal = restoreCompatibleValue(entity, mergedFieldNames),\n        selectedOptions = _restoreCompatibleVal.options;\n\n    var rawOptions = selectedOptions.map(function (opt) {\n      return opt.node;\n    });\n    var labelList = rawOptions.map(function (opt) {\n      return opt[fieldLabel];\n    });\n    return displayRender(labelList, rawOptions);\n  }; // =========================== Change ===========================\n\n\n  var onInternalChange = function onInternalChange(newValue\n  /** Not care current type */\n  ) {\n    // TODO: Need improve motion experience\n    setMergedSearch('');\n    var valueList = checkable ? newValue : [newValue];\n    var pathList = [];\n    var optionsList = [];\n    var valueEntities = valueList.map(getEntityByValue).filter(function (entity) {\n      return entity;\n    });\n    valueEntities.forEach(function (entity) {\n      var _restoreCompatibleVal2 = restoreCompatibleValue(entity, mergedFieldNames),\n          valueOptions = _restoreCompatibleVal2.options;\n\n      var originOptions = valueOptions.map(function (option) {\n        return option.node;\n      });\n      pathList.push(originOptions.map(function (opt) {\n        return (// Here we should use original FieldNames value mapping\n          opt[outerFieldNames.value]\n        );\n      }));\n      optionsList.push(originOptions);\n    }); // Fill state\n\n    if (value === undefined) {\n      setInternalValue(valueList);\n    }\n\n    if (onChange) {\n      if (checkable) {\n        onChange(pathList, optionsList);\n      } else {\n        // TODO: This should return null as other component.\n        // But its a breaking change and we should keep the logic.\n        onChange(pathList[0] || [], optionsList[0] || []);\n      }\n    }\n  }; // ============================ Open ============================\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!onPopupVisibleChange, '`onPopupVisibleChange` is deprecated. Please use `onDropdownVisibleChange` instead.');\n    warning(popupVisible === undefined, '`popupVisible` is deprecated. Please use `open` instead.');\n    warning(popupClassName === undefined, '`popupClassName` is deprecated. Please use `dropdownClassName` instead.');\n    warning(popupPlacement === undefined, '`popupPlacement` is deprecated. Please use `placement` instead.');\n  }\n\n  var mergedOpen = open !== undefined ? open : popupVisible;\n  var mergedDropdownClassName = dropdownClassName || popupClassName;\n  var mergedPlacement = placement || popupPlacement;\n\n  var onInternalDropdownVisibleChange = function onInternalDropdownVisibleChange(nextVisible) {\n    onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextVisible);\n    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(nextVisible);\n  }; // ========================== Context ===========================\n\n\n  var context = React.useMemo(function () {\n    return {\n      changeOnSelect: changeOnSelect,\n      expandTrigger: expandTrigger,\n      fieldNames: mergedFieldNames,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      loadData: loadData,\n      dropdownMenuColumnStyle: dropdownMenuColumnStyle,\n      search: searchConfig,\n      dropdownPrefixCls: dropdownPrefixCls\n    };\n  }, [changeOnSelect, expandTrigger, mergedFieldNames, expandIcon, loadingIcon, loadData, dropdownMenuColumnStyle, searchConfig, dropdownPrefixCls]); // =========================== Render ===========================\n\n  var dropdownStyle = // Search to match width\n  mergedSearch && searchConfig.matchInputWidth || // Empty keep the width\n  !mergedOptions.length ? {} : {\n    minWidth: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(RefCascader, _extends({\n    ref: cascaderRef\n  }, restProps, {\n    fieldNames: mergedFieldNames,\n    value: checkable ? internalValue : internalValue[0],\n    placement: mergedPlacement,\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: mergedDropdownClassName,\n    treeData: mergedOptions,\n    treeCheckable: checkable,\n    treeNodeFilterProp: \"label\",\n    onChange: onInternalChange,\n    showCheckedStrategy: RefCascader.SHOW_PARENT,\n    open: mergedOpen,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange,\n    searchValue: mergedSearch // Customize filter logic in OptionList\n    ,\n    filterTreeNode: function filterTreeNode() {\n      return true;\n    },\n    showSearch: mergedShowSearch,\n    onSearch: setMergedSearch,\n    labelRender: labelRender,\n    getRawInputElement: function getRawInputElement() {\n      return children;\n    }\n  })));\n});\nCascader.displayName = 'Cascader';\nexport default Cascader;"],"mappings":"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"},"metadata":{},"sourceType":"module"}