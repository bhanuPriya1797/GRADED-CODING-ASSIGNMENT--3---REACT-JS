{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport { useState, useCallback, useMemo } from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport devWarning from '../../_util/devWarning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n    preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n    selectedRowKeys = _ref.selectedRowKeys,\n    defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n    getCheckboxProps = _ref.getCheckboxProps,\n    onSelectionChange = _ref.onChange,\n    onSelect = _ref.onSelect,\n    onSelectAll = _ref.onSelectAll,\n    onSelectInvert = _ref.onSelectInvert,\n    onSelectNone = _ref.onSelectNone,\n    onSelectMultiple = _ref.onSelectMultiple,\n    selectionColWidth = _ref.columnWidth,\n    selectionType = _ref.type,\n    selections = _ref.selections,\n    fixed = _ref.fixed,\n    customizeRenderCell = _ref.renderCell,\n    hideSelectAll = _ref.hideSelectAll,\n    _ref$checkStrictly = _ref.checkStrictly,\n    checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n  var prefixCls = config.prefixCls,\n    data = config.data,\n    pageData = config.pageData,\n    getRecordByKey = config.getRecordByKey,\n    getRowKey = config.getRowKey,\n    expandType = config.expandType,\n    childrenColumnName = config.childrenColumnName,\n    tableLocale = config.locale,\n    expandIconColumnIndex = config.expandIconColumnIndex,\n    getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || defaultSelectedRowKeys || [], {\n      value: selectedRowKeys\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSelectedKeys = _useMergedState2[0],\n    setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = useCallback(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n  var _useMemo = useMemo(function () {\n      return checkStrictly ? {\n        keyEntities: null\n      } : convertDataToEntities(data, {\n        externalGetKey: getRowKey,\n        childrenPropName: childrenColumnName\n      });\n    }, [data, getRowKey, checkStrictly, childrenColumnName]),\n    keyEntities = _useMemo.keyEntities; // Get flatten data\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n  var _useMemo2 = useMemo(function () {\n      if (checkStrictly) {\n        return [mergedSelectedKeys || [], []];\n      }\n      var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n      return [checkedKeys || [], halfCheckedKeys];\n    }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n    _useMemo3 = _slicedToArray(_useMemo2, 2),\n    derivedSelectedKeys = _useMemo3[0],\n    derivedHalfSelectedKeys = _useMemo3[1];\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    lastSelectedKey = _useState2[0],\n    setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }));\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys);\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n    var title;\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n            text = selection.text,\n            onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n    var renderCell;\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          devWarning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n              }\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                    halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n        node = _renderCell.node,\n        checked = _renderCell.checked;\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    }; // Columns\n\n    var selectionColumn = _defineProperty({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n        expandColumn = _columns[0],\n        restColumns = _columns.slice(1);\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_toArray","_defineProperty","_extends","_slicedToArray","_toConsumableArray","_typeof","React","useState","useCallback","useMemo","DownOutlined","convertDataToEntities","conductCheck","arrAdd","arrDel","INTERNAL_COL_DEFINE","useMergedState","Checkbox","Dropdown","Menu","Radio","devWarning","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","push","concat","useSelection","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","_useMergedState","value","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","keys","newCache","key","current","has","get","set","useEffect","_useMemo","keyEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","add","Array","from","selectNone","transformColumns","columns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabledData","checked","_ref2","allDisabled","length","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","_columns","expandColumn","restColumns","selectionFixed"],"sources":["F:/Great Learning FSD/React Js/graded-final/repo/node_modules/antd/es/table/hooks/useSelection.js"],"sourcesContent":["import _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport { useState, useCallback, useMemo } from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport devWarning from '../../_util/devWarning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = useCallback(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          devWarning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = _defineProperty({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}