{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = function FormStore(forceRootUpdate) {\n  var _this = this;\n  _classCallCheck(this, FormStore);\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue\n      };\n    }\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n  this.getInitialValue = function (namePath) {\n    return getValue(_this.initialValues, namePath);\n  };\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n  this.timeoutId = null;\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n    return cache;\n  };\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n    var cache = _this.getFieldsMap(true);\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    var fieldError = _this.getFieldsError([namePath])[0];\n    return fieldError.errors;\n  };\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    var fieldError = _this.getFieldsError([namePath])[0];\n    return fieldError.warnings;\n  };\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var arg0 = args[0],\n      arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n    var fieldEntities = _this.getFieldEntities(true);\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n    var namePathListEntities = map.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n    return _this.isFieldsTouched([name]);\n  };\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n    var fieldEntities = _this.getFieldEntities();\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n    return _this.isFieldsValidating([name]);\n  };\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n    var fieldEntities = _this.getFieldEntities(true);\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n          var formInitialValue = _this.getInitialValue(namePath);\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.store = setValue(_this.store, namePath, _toConsumableArray(records)[0].value);\n              }\n            }\n          }\n        }\n      });\n    };\n    var requiredFieldEntities;\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n        if (records) {\n          var _requiredFieldEntitie;\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n    resetWithFields(requiredFieldEntities);\n  };\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n      _this.resetWithFieldInitialValue();\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n      return;\n    } // Reset by `nameList`\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n  };\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n        errors = fieldData.errors,\n        data = _objectWithoutProperties(fieldData, _excluded);\n      var namePath = getNamePath(name); // Value\n\n      if ('value' in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n  };\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n      if (prevValue === undefined) {\n        _this.store = setValue(_this.store, namePath, initialValue);\n      }\n    }\n  };\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity); // Set initial values\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      var mergedPreserve = preserve !== undefined ? preserve : _this.preserve;\n      if (mergedPreserve === false && (!isListField || subNamePath.length > 1)) {\n        var namePath = entity.getNamePath();\n        var defaultValue = isListField ? undefined : getValue(_this.initialValues, namePath);\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (\n            // Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          _this.store = setValue(_this.store, namePath, defaultValue, true);\n        }\n      }\n    };\n  };\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n            value = action.value;\n          _this.updateValue(namePath, value);\n          break;\n        }\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n            triggerName = action.triggerName;\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n          break;\n        }\n      default: // Currently we don't have other action. Do nothing.\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n      _this.getFieldEntities().forEach(function (_ref2) {\n        var onStoreChange = _ref2.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    }); // Notify dependencies children with parent update\n    // We need delay to trigger validate in case Field is under render props\n\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    }); // trigger callback function\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n  };\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref3) {\n          var name = _ref3.name,\n            errors = _ref3.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n      var changedFields = fields.filter(function (_ref4) {\n        var fieldName = _ref4.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n        if (\n        // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function (_ref5) {\n            var warningOnly = _ref5.rule.warningOnly,\n              errors = _ref5.errors;\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref6) {\n        var name = _ref6.name;\n        return name;\n      });\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n  this.submit = function () {\n    _this.warningUnhooked();\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n  this.forceRootUpdate = forceRootUpdate;\n};\nfunction useForm(form) {\n  var formRef = React.useRef();\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    forceUpdate = _React$useState2[1];\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n  return [formRef.current];\n}\nexport default useForm;","map":{"version":3,"names":["_slicedToArray","_objectSpread","_objectWithoutProperties","_toConsumableArray","_classCallCheck","_excluded","React","warning","HOOK_MARK","allPromiseFinish","NameMap","defaultValidateMessages","cloneByNamePathList","containsNamePath","getNamePath","getValue","matchNamePath","setValue","setValues","FormStore","forceRootUpdate","_this","formHooked","subscribable","store","fieldEntities","initialValues","callbacks","validateMessages","preserve","lastValidatePromise","getForm","getFieldValue","getFieldsValue","getFieldError","getFieldWarning","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldsValue","validateFields","submit","getInternalHooks","key","dispatch","initEntityValue","registerField","useSubscribe","setInitialValues","setCallbacks","setValidateMessages","getFields","setPreserve","getInitialValue","init","namePath","timeoutId","warningUnhooked","process","env","NODE_ENV","window","setTimeout","getFieldEntities","pure","arguments","length","undefined","filter","field","getFieldsMap","cache","forEach","set","getFieldEntitiesForNamePathList","nameList","map","name","get","INVALIDATE_NAME_PATH","filterFunc","Array","isArray","filteredNameList","entity","_entity$isListField","isListField","call","push","meta","getMeta","index","errors","getErrors","warnings","getWarnings","fieldError","_len","args","_key","arg0","arg1","namePathList","isAllFieldsTouched","every","some","shortNamePath","fieldNamePath","nameUnit","i","update","list","concat","isNamePathListTouched","entities","namePathListEntities","_ref","value","testField","resetWithFieldInitialValue","info","initialValue","props","records","Set","add","resetWithFields","formInitialValue","join","size","originValue","skipExist","requiredFieldEntities","_requiredFieldEntitie","apply","r","prevStore","notifyObservers","type","fields","fieldData","data","Object","defineProperty","prevValue","source","subNamePath","item","mergedPreserve","defaultValue","action","updateValue","_namePath","triggerName","mergedInfo","_ref2","onStoreChange","childrenFields","getDependencyChildrenFields","relatedFields","onValuesChange","changedValues","triggerOnFieldsChange","rootNamePath","children","dependencies2fields","dependencies","dependency","dependencyNamePath","fillChildren","has","isFieldDirty","filedErrors","onFieldsChange","_ref3","changedFields","_ref4","fieldName","options","provideNameList","promiseList","recursive","rules","promise","validateRules","then","catch","ruleErrors","mergedErrors","mergedWarnings","_ref5","warningOnly","rule","Promise","reject","summaryPromise","results","resultNamePathList","_ref6","returnPromise","resolve","errorList","result","values","errorFields","outOfDate","e","onFinish","err","console","error","onFinishFailed","useForm","form","formRef","useRef","_React$useState","useState","_React$useState2","forceUpdate","current","forceReRender","formStore"],"sources":["F:/Great Learning FSD/React Js/graded-final/repo/node_modules/rc-field-form/es/useForm.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n\n  this.getInitialValue = function (namePath) {\n    return getValue(_this.initialValues, namePath);\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.store = setValue(_this.store, namePath, _toConsumableArray(records)[0].value);\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name); // Value\n\n      if ('value' in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.store = setValue(_this.store, namePath, initialValue);\n      }\n    }\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      var mergedPreserve = preserve !== undefined ? preserve : _this.preserve;\n\n      if (mergedPreserve === false && (!isListField || subNamePath.length > 1)) {\n        var namePath = entity.getNamePath();\n        var defaultValue = isListField ? undefined : getValue(_this.initialValues, namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          _this.store = setValue(_this.store, namePath, defaultValue, true);\n        }\n      }\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref2) {\n        var onStoreChange = _ref2.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    }); // Notify dependencies children with parent update\n    // We need delay to trigger validate in case Field is under render props\n\n\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    }); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref3) {\n          var name = _ref3.name,\n              errors = _ref3.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref4) {\n        var fieldName = _ref4.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function (_ref5) {\n            var warningOnly = _ref5.rule.warningOnly,\n                errors = _ref5.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref6) {\n        var name = _ref6.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n};\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}